<?xml version="1.0"?>
<project basedir="." name="DeployJOA" default="projectInit">

  <!-- custom setting -->
  <import file="${deploy.buildRefFilePath}" />
  
  <!-- system setting : Don't change setting.-->
  <property name="debuglevel" value="source,lines,vars"/>  
	<property name="builddir" value="${deploy.basedir}/deploy/build/${deploy.deployno}/classes"/>  
  
  <path id="java.lib.classpath">
     <fileset dir="${java_home.dir}/lib">
         <include name="*.jar" />
     </fileset>    	
  </path>
  <path id="webapp.lib.classpath">
      <fileset dir="${webapp.dir}/lib">
             <include name="*.jar" />
      </fileset>
  </path>
  <path id="web.lib.classpath">
      <fileset dir="${deploy.basedir}/project_init/${webroot}/WEB-INF/lib">
             <include name="*.jar" />
      </fileset>
  </path>
  <path id="project.classpath">
    <pathelement location="${deploy.basedir}/project_init/target/classes"/>
  	<path refid="java.lib.classpath"/>
  	<path refid="webapp.lib.classpath"/>
     <path refid="web.lib.classpath"/>
  </path>
<!--
	<target name="backup">
		<mkdir dir="${backupdir}" />
		<copy todir="${backupdir}" overwrite="true">
			<fileset dir="${deploy.webroot}">
				<include name="**/*" />
			</fileset>
		</copy>		
	</target>
-->
  
  <target name="build-version">
      <echo message="[DeployJOA] source compile start ++++++++++"/>      
      <mkdir dir="${builddir}"/>      
      <javac debug="true" fork="yes" debuglevel="${debuglevel}" destdir="${builddir}" includeantruntime="false" source="${source}" target="${target}" encoding="${encode_type}">
          <src path="${deploy.basedir}/deploy/buildsrc/${deploy.deployno}"/>
          <classpath refid="project.classpath"/>
      </javac>
  </target>
    
	<target name="deploy" depends="build-version">
		<echo message="deploy to ${deploy.webroot}/${deploy.deployno}" />
		<copy todir="${deploy.webroot}/${deploy.deployno}" overwrite="true">
			<fileset dir="${deploy.basedir}/deploy/buildsrc/${deploy.deployno}/${webroot}">
				<include name="**/*" />
			</fileset>
		</copy>	
		<copy todir="${deploy.webroot}/${deploy.deployno}/WEB-INF/classes" overwrite="true">
			<fileset dir="${builddir}">
				<include name="**/*" />
			</fileset>				
		</copy>
	</target>

  <target name="dir.check">
      <condition property="dir.exists">
          <available file="${deploy.basedir}/deploy/buildsrc/${deploy.deployno}/${resources_srcdir}" type="dir" />
      </condition>
  </target>

	<target name="deploy_resources" depends="build-version" if="dir.exists">
    <copy todir="${deploy.webroot}/${deploy.deployno}/WEB-INF/classes" overwrite="true">
			<fileset dir="${deploy.basedir}/deploy/buildsrc/${deploy.deployno}/${resources_srcdir}">
				<include name="**/*" />
			</fileset>				
		</copy>	
	</target>
	
	<target name="copy_to_init" depends="deploy">
		<echo message="copy_to_init" />
		<copy todir="${deploy.basedir}/project_init/target/classes" overwrite="true">
			<fileset dir="${builddir}">
				<include name="**/*" />
			</fileset>
		</copy>			
	</target>
	
	<target name="versionDeploy" depends="build-version,deploy,copy_to_init,dir.check,deploy_resources" />
	
	<!-- PROJECT INIT SET -->			
  <target name="clean-init-project">
      <delete dir="${deploy.basedir}/project_init/target/classes"/>  
      <mkdir dir="${deploy.basedir}/project_init/target/classes"/>
      <copy includeemptydirs="false" todir="${deploy.basedir}/project_init/target/classes">
          <fileset dir="${deploy.basedir}/project_init/${srcdir}">
              <exclude name="**/*.java"/>
          </fileset>
      </copy>
      <copy includeemptydirs="false" todir="${deploy.basedir}/project_init/target/classes">
          <fileset dir="${deploy.basedir}/project_init/${resources_srcdir}">
              <exclude name="**/*.java"/>
          </fileset>
      </copy>
  </target>

  <target depends="clean-init-project" name="build-init-project">
      <echo message="project init"/>
      <javac debug="true" fork="yes" debuglevel="${debuglevel}" destdir="${deploy.basedir}/project_init/target/classes" includeantruntime="false" source="${source}" target="${target}" encoding="${encode_type}">
          <src path="${deploy.basedir}/project_init/${srcdir}"/>
          <src path="${deploy.basedir}/project_init/${resources_srcdir}"/>
          <classpath refid="project.classpath"/>
      </javac>
  </target>

	<target name="projectInit" depends="clean-init-project,build-init-project" />    	
</project>
